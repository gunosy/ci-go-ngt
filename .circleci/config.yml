version: 2.1

executors:
  docker:
    working_directory: ~/workspace
    docker:
      - image: docker:18.03-git

commands:
  docker_build:
    description: Push image to registory
    parameters:
      repository:
        type: string
    steps:
      - run:
          command: docker build -t << parameters.repository >> .
  docker_push:
    description: Push image to registory
    parameters:
      repository:
        type: string
    steps:
      - run:
          command: |
            export TAG=`date +%Y.%m.%d`
            docker tag << parameters.repository >> << parameters.repository >>:${TAG}
            docker push << parameters.repository >>:${TAG}

jobs:
  build_and_push:
    executor: docker
    steps:
      # 1) shallow clone をやめて全履歴を取得できるようにする
      - checkout:
          fetch-depth: 0

      # 2) Docker を使うためのセットアップ
      - setup_remote_docker

      # 3) Docker Hub にログイン (環境変数 DOCKERHUB_USERNAME, DOCKERHUB_PASSWORD が必要)
      - run:
          name: Login to DockerHub
          command: docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"

      # 4) main ブランチを fetch して、変更のあった Dockerfile のみをビルド＆プッシュする
      - run:
          name: Diff Dockerfiles and build/push
          command: |
            # main ブランチがなければ fetch する
            git fetch origin master

            # main..HEAD の差分ファイルを取得
            CHANGED_FILES=$(git diff --name-only origin/master..HEAD)
            echo "Changed files:"
            echo "$CHANGED_FILES"

            # 変更ファイルの中から Dockerfile だけをフィルタ
            DOCKERFILES=$(echo "$CHANGED_FILES" | grep "Dockerfile" || true)

            # もし Dockerfile の変更がなければスキップ
            if [ -z "$DOCKERFILES" ]; then
              echo "No Dockerfile changed. Skipping build and push."
              exit 0
            fi

            echo "Changed Dockerfiles:"
            echo "$DOCKERFILES"

            # Dockerfile があるフォルダごとにビルド＆プッシュ
            for FILE in $DOCKERFILES; do
              # ディレクトリ名をイメージのタグとして使用
              TAG=$(dirname "$FILE")
              # 必要に応じて、TAG をさらに加工してもよい
              echo "Building image for directory: $TAG"

              # Docker build
              docker build -f $FILE . -t gunosy/ci-go-ngt:${TAG}

              # Docker push
              docker push gunosy/ci-go-ngt:${TAG}
            done

workflows:
  build:
    jobs:
      - build_and_push:
          filters:
            branches:
              ignore: []
